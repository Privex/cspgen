###
# The 'groups' section is very important for using csp-gen
# It allows you to define variables that you can use in each CSP section, via {{varname}}.
#
# Additionally, you may even include variables in group variables, as long as the var you include:
#
#   - was defined higher up / earlier than the one you're writing the {{include}} within
#   - isn't also including the var that it's including it (infinite import loop)
###
[groups]
# First we define cdn, onions, and i2p
cdn = https://cdn.privex.io cdn.privex.i2p files.privex.i2p files.privex.io https://www.privex.io
onions = privex3guvvasyer6pxz2fqcgy56auvw5egkir6ykwpptferdcb5toad.onion privexqvhkwdsdnjofrsm7reaixclmzpbpveefiu4uctfm2l4mycnwad.onion
i2p = privex.i2p www.privex.i2p pay.privex.i2p
# Now we can add our main websites, PLUS the onions, and i2p variables
websites = https://www.privex.io https://pay.privex.io https://privex.io {{onions}} {{i2p}}
googlefonts = https://fonts.gstatic.com https://fonts.googleapis.com
trustpilot = https://widget.trustpilot.com https://trustpilot.com
# We can define 'images' and 'video' as independent vars - then merge them both together in 'media'
images = https://i.imgur.com https://ipfs.io https://cloudflare-ipfs.com
video = https://youtube.com https://vimeo.com
media = {{video}} {{images}}
# While defaultsrc will contain 'self' + websites + cdn
defaultsrc = 'self' {{websites}} {{cdn}}
remotepost = https://hived.privex.io {{websites}}

[default-src]
# For default-src, we can simply set zones to use the defaultsrc var
zones = {{defaultsrc}}
# When you set unsafe-inline or unsafe-eval to 'true', 1, 'TRUE', 'yes', etc., then they will be
# added to the end of the section, e.g. default-src: 'self' https://privex.io ... 'unsafe-inline';
# Both of them default to FALSE for every INI section, regardless of what you set in default-src.
unsafe-inline = true
unsafe-eval = false

###
# The rest of these sections are mostly just using the "group variables" we defined in [groups]
# Thus there's not really much to explain. They define 'zones = xxx', and can either use
# plain text domains/URLs, things like 'self', or they can inject a variable from groups using {{varname}}
###

[style-src]
zones = 'self' {{websites}} {{cdn}} {{trustpilot}} {{googlefonts}}
unsafe-inline = true

[script-src]
zones = 'self' {{websites}} {{cdn}} {{trustpilot}}
unsafe-inline = true

[font-src]
zones = 'self' {{websites}} {{cdn}} {{trustpilot}} {{googlefonts}}

[img-src]
zones = {{defaultsrc}} {{images}} {{trustpilot}}

[media-src]
zones = {{defaultsrc}} {{media}}

[object-src]
zones = {{defaultsrc}} {{media}}

[form-action]
zones = {{defaultsrc}} {{remotepost}}

[connect-src]
zones = {{defaultsrc}} {{remotepost}}

[flags]
# Special header 'flags'. We can set the independent CSP flag 'upgrade-insecure-requests' here.
flags = upgrade-insecure-requests

# [frame-src]
# [child-src]
# [worker-src]
# [frame-ancestors]
# [base-uri]
# [report-uri]

